// Copyright 2025 JC-Lab
// SPDX-License-Identifier: AGPL-3.0-or-later OR LicenseRef-FEL

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v3.21.12
// source: throughput.proto

package throughputpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Start struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DurationSec   uint32                 `protobuf:"varint,1,opt,name=duration_sec,json=durationSec,proto3" json:"duration_sec,omitempty"`
	BufferSize    uint32                 `protobuf:"varint,2,opt,name=buffer_size,json=bufferSize,proto3" json:"buffer_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Start) Reset() {
	*x = Start{}
	mi := &file_throughput_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Start) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Start) ProtoMessage() {}

func (x *Start) ProtoReflect() protoreflect.Message {
	mi := &file_throughput_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Start.ProtoReflect.Descriptor instead.
func (*Start) Descriptor() ([]byte, []int) {
	return file_throughput_proto_rawDescGZIP(), []int{0}
}

func (x *Start) GetDurationSec() uint32 {
	if x != nil {
		return x.DurationSec
	}
	return 0
}

func (x *Start) GetBufferSize() uint32 {
	if x != nil {
		return x.BufferSize
	}
	return 0
}

type Ack struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ack) Reset() {
	*x = Ack{}
	mi := &file_throughput_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ack) ProtoMessage() {}

func (x *Ack) ProtoReflect() protoreflect.Message {
	mi := &file_throughput_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ack.ProtoReflect.Descriptor instead.
func (*Ack) Descriptor() ([]byte, []int) {
	return file_throughput_proto_rawDescGZIP(), []int{1}
}

var File_throughput_proto protoreflect.FileDescriptor

const file_throughput_proto_rawDesc = "" +
	"\n" +
	"\x10throughput.proto\x12\x12flymesh.throughput\"K\n" +
	"\x05Start\x12!\n" +
	"\fduration_sec\x18\x01 \x01(\rR\vdurationSec\x12\x1f\n" +
	"\vbuffer_size\x18\x02 \x01(\rR\n" +
	"bufferSize\"\x05\n" +
	"\x03AckB8Z6github.com/flymesh/core/pkg/pb/throughput;throughputpbb\x06proto3"

var (
	file_throughput_proto_rawDescOnce sync.Once
	file_throughput_proto_rawDescData []byte
)

func file_throughput_proto_rawDescGZIP() []byte {
	file_throughput_proto_rawDescOnce.Do(func() {
		file_throughput_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_throughput_proto_rawDesc), len(file_throughput_proto_rawDesc)))
	})
	return file_throughput_proto_rawDescData
}

var file_throughput_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_throughput_proto_goTypes = []any{
	(*Start)(nil), // 0: flymesh.throughput.Start
	(*Ack)(nil),   // 1: flymesh.throughput.Ack
}
var file_throughput_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_throughput_proto_init() }
func file_throughput_proto_init() {
	if File_throughput_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_throughput_proto_rawDesc), len(file_throughput_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_throughput_proto_goTypes,
		DependencyIndexes: file_throughput_proto_depIdxs,
		MessageInfos:      file_throughput_proto_msgTypes,
	}.Build()
	File_throughput_proto = out.File
	file_throughput_proto_goTypes = nil
	file_throughput_proto_depIdxs = nil
}
